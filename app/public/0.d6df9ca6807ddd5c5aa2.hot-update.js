webpackHotUpdate(0,{

/***/ 292:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__store__ = __webpack_require__(27);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'clientFormJuridic',\n  data: function data() {\n    return {\n      selected: [],\n      name: '',\n      social_reason: '',\n      register_code: '',\n      email: '',\n      dismissSecs: 3,\n      dismissCountDown: 0,\n      showDismissibleAlert: false\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    if (!__WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* default */].state.isLogged) {\n      this.$router.push('/');\n    }\n  },\n\n  methods: {\n    click: function click() {},\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    showAlert: function showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n      var self = this;\n      setTimeout(function () {\n        self.clearText();\n      }, 3000);\n    },\n    clearText: function clearText() {\n      this.$data.name = '';\n      this.$data.social_reason = '';\n      this.$data.register_code = '';\n      this.$data.email = '';\n      console.log('cleared all entry text fields');\n    },\n    sendData: function sendData() {\n      var _this = this;\n\n      console.log('sending data with: \\nname ->' + this.$data.name + '\\nregister code -> ' + this.$data.register_code + '\\n email -> ' + this.$data.email + '\\nsocial reason -> ' + this.$data.social_reason);\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('/api/v1/costumers/', {\n        name: this.$data.name,\n        email: this.$data.email,\n        kind: '1',\n        register_code: this.$data.register_code,\n        social_reason: this.$data.social_reason\n      }, { headers: { Authorization: localStorage.getItem('token') } }).then(function (response) {}).catch(function (e) {\n        _this.errors.push(e);\n      }).then(this.showAlert());\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///292\n");

/***/ })

})