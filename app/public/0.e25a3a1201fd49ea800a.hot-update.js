webpackHotUpdate(0,{

/***/ 328:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'clientSearch',\n  components: {\n    Autocomplete: __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default.a\n  },\n  data: function data() {\n    return {\n      autoCompleteData: [],\n      clients: [],\n      name: '',\n      register_code: '',\n      kind: '',\n      physical_opt: false,\n      juridic_opt: false,\n      result: false,\n      loading: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/costumers').then(function (response) {\n      _this.loading = true;\n      _this.autoCompleteData = response.data.data;\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n  },\n\n  methods: {\n    clearText: function clearText() {\n      this.$data.name = '';\n      this.$data.register_code = '';\n      this.$data.physical_opt = 0;\n      this.$data.juridic_opt = 0;\n      this.$refs.autocomplete.clearValues();\n      console.log('cleared all entry text fields');\n    },\n    formattedDisplay: function formattedDisplay(result) {\n      return result.name;\n    },\n    addName: function addName(client) {\n      this.$data.name = client.selectedObject.name;\n      this.$data.register_code = client.selectedObject.register_code;\n      console.log(this.name + '\\n' + this.register_code);\n    },\n    submitSearch: function submitSearch() {\n      var _this2 = this;\n\n      this.evalueKind();\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/costumers/search', {\n        params: {\n          name: this.$data.name,\n          register_code: this.$data.register_code,\n          kind: this.$data.kind\n        }\n      }).then(function (response) {\n        _this2.$data.clients = response.data.data;\n        _this2.$data.clients.sort(function (a, b) {\n          return a.name > b.name ? 1 : b.name > a.name ? -1 : 0;\n        });\n      }).then(this.showList());\n    },\n    evalueKind: function evalueKind() {\n      if (this.$data.physical_opt === false && this.$data.juridic_opt === true) {\n        this.$data.kind = true;\n      } else if (this.$data.physical_opt === true && this.$data.juridic_opt === false) {\n        this.$data.kind = false;\n      } else {\n        this.$data.kind = '';\n      }\n    },\n    showList: function showList() {\n      this.$data.result = true;\n    },\n    goToEdit: function goToEdit(id) {\n      this.$router.push({ path: '/clients/edit/' + id });\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///328\n");

/***/ })

})