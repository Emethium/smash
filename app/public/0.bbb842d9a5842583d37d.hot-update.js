webpackHotUpdate(0,{

/***/ 347:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'subsidiaryForm',\n  data: function data() {\n    return {\n      name: '',\n      social_reason: '',\n      cnpj: '',\n      email: '',\n      city: '',\n      state: '',\n      dismissSecs: 3,\n      dismissCountDown: 0,\n      showDismissibleAlert: false\n    };\n  },\n\n  methods: {\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    showAlert: function showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n      var self = this;\n      setTimeout(function () {\n        self.clearText();\n      }, 3000);\n    },\n    clearText: function clearText() {\n      this.$data.name = '';\n      this.$data.social_reason = '';\n      this.$data.cnpj = '';\n      this.$data.email = '';\n      this.$data.city = '';\n      this.$data.state = '';\n      console.log('cleared all entry text fields');\n    },\n    sendData: function sendData() {\n      var _this = this;\n\n      console.log('sending data with: \\nname ->' + this.$data.name + '\\nsocial reason -> ' + this.$data.social_reason + '\\n email -> ' + this.$data.email + 'cnpj -> ' + this.$data.cnpj + 'city -> ' + this.$data.city + 'state -> ' + this.$data.state);\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('/api/v1/companies/', {\n        name: this.$data.name,\n        social_reason: this.$data.social_reason,\n        email: this.$data.email,\n        cnpj: this.$data.cnpj,\n        city: this.$data.city,\n        state: this.$data.state\n      }, { headers: { Authorization: localStorage.getItem('token') } }).then(function (response) {}).catch(function (e) {\n        _this.errors.push(e);\n      }).then(this.showAlert());\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///347\n");

/***/ })

})