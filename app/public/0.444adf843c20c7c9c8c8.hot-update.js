webpackHotUpdate(0,{

/***/ 340:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'vehicleForm',\n  components: {\n    Autocomplete: __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default.a\n  },\n  data: function data() {\n    return {\n      plate: '',\n      chassis: '',\n      control: '',\n      costumer: '',\n      kind: '',\n      kinds: [],\n      costumers: [],\n      dismissSecs: 3,\n      dismissCountDown: 0,\n      showDismissibleAlert: false,\n      loading: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/equipment_types', { headers: { Authorization: localStorage.getItem('token') } }).then(function (response) {\n      _this.loading = true;\n      _this.$data.kinds = response.data.data;\n      _this.$data.kinds = _this.sortByKey(_this.$data.kinds, 'kind');\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/costumers', { headers: { Authorization: localStorage.getItem('token') } }).then(function (response) {\n      _this.loading = true;\n      _this.costumers = response.data.data;\n      _this.costumers = _this.sortByKey(_this.costumers, 'name');\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n  },\n\n  methods: {\n    formattedDisplay: function formattedDisplay(result) {\n      return result.name;\n    },\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    sortByKey: function sortByKey(array, key) {\n      return array.sort(function (a, b) {\n        var x = a[key];\n        var y = b[key];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    },\n    showAlert: function showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n      var self = this;\n      setTimeout(function () {\n        self.clearText();\n      }, 3000);\n    },\n    clearText: function clearText() {\n      this.$data.plate = '';\n      this.$data.chassis = '';\n      this.$data.control = '';\n      this.$data.costumer = '';\n      this.$data.kind = '';\n      this.$refs.clients.clearValues();\n      console.log('cleared all entry text fields');\n    },\n    addName: function addName(client) {\n      this.$data.costumer = client.selectedObject.name;\n    },\n    sendData: function sendData() {\n      var _this2 = this;\n\n      console.log('sending data with: \\nplate -> ' + this.$data.plate + '\\nchassis -> ' + this.$data.chassis + '\\n control -> ' + this.$data.control + '\\ncostumer -> ' + this.$data.costumer + '\\nkind -> ' + this.$data.kind);\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('/api/v1/equipments/', {\n        plate: this.$data.plate,\n        chassis: this.$data.chassis,\n        control_number: this.$data.control,\n        proprietary: this.$data.costumer,\n        kind: this.$data.kind\n      }, { headers: { Authorization: localStorage.getItem('token') } }).then(function (response) {}).catch(function (e) {\n        _this2.errors.push(e);\n      }).then(this.showAlert());\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///340\n");

/***/ })

})