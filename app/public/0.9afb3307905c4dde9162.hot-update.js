webpackHotUpdate(0,{

/***/ 347:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete__);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'serviceForm',\n  components: {\n    Autocomplete: __WEBPACK_IMPORTED_MODULE_1_vuejs_auto_complete___default.a\n  },\n  data: function data() {\n    return {\n      kind: '',\n      company: '',\n      client: '',\n      plate: '',\n      cost: 0,\n      done_at: '',\n      next_service: '',\n      kinds: [],\n      companies: [],\n      vehicles: [],\n      dismissSecs: 3,\n      dismissCountDown: 0,\n      showDismissibleAlert: false,\n      loading: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/service_types').then(function (response) {\n      _this.loading = true;\n      _this.$data.kinds = response.data.data;\n      _this.$data.kinds = _this.sortByKey(_this.$data.kinds, 'kind');\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/companies').then(function (response) {\n      _this.loading = true;\n      _this.$data.companies = response.data.data;\n      _this.$data.companies = _this.sortByKey(_this.$data.companies, 'name');\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('/api/v1/equipments').then(function (response) {\n      _this.loading = true;\n      _this.$data.vehicles = response.data.data;\n      _this.$data.vehicles = _this.sortByKey(_this.$data.vehicles, 'plate');\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n  },\n\n  methods: {\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    formattedDisplay: function formattedDisplay(result) {\n      return result.plate;\n    },\n    setAttributes: function setAttributes(vehicle) {\n      this.$data.plate = vehicle.selectedObject.plate;\n      this.$data.client = vehicle.selectedObject.proprietary;\n    },\n    sortByKey: function sortByKey(array, key) {\n      return array.sort(function (a, b) {\n        var x = a[key];\n        var y = b[key];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    },\n    showAlert: function showAlert() {\n      scroll(0, 0);\n      this.dismissCountDown = this.dismissSecs;\n      var self = this;\n      setTimeout(function () {\n        self.clearText();\n      }, 3000);\n    },\n    clearText: function clearText() {\n      this.$data.kind = '';\n      this.$data.company = '';\n      this.$data.client = '';\n      this.$data.plate = '';\n      this.$data.cost = 0;\n      this.$data.done_at = '';\n      this.$data.next_service = '';\n      this.$refs.autocomplete.clearValues();\n      console.log('cleared all entry text fields');\n    },\n    sendData: function sendData() {\n      var _this2 = this;\n\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('/api/v1/services/', {\n        name: this.$data.kind,\n        cost: this.$data.cost,\n        costumer: this.$data.client,\n        equipment: this.$data.plate,\n        company: this.$data.company,\n        done_at: this.$data.done_at,\n        next_service: this.$data.next_service\n      }).then(function (response) {}).catch(function (e) {\n        _this2.errors.push(e);\n      }).then(this.showAlert());\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///347\n");

/***/ })

})